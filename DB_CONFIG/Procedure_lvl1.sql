CREATE OR REPLACE PACKAGE LVL1 AS 

  PROCEDURE ADD_USER(
    OFFICER_NAME IN VARCHAR2,
    OFFICER_RANK IN VARCHAR2,
    OFFICER_LVL IN NUMBER
  ); 
  
  PROCEDURE DELETE_USER(
    OFFICER_NAME IN VARCHAR2
  );
  
  PROCEDURE EDIT_PWD(
    OFFICER_PWD IN VARCHAR2,
    OFFICER_NAME IN VARCHAR2
  );

END LVL1; 

CREATE OR REPLACE PACKAGE BODY LVL1 AS 

  PROCEDURE ADD_USER(
    OFFICER_NAME IN VARCHAR2,
    OFFICER_RANK IN VARCHAR2,
    OFFICER_LVL IN NUMBER
  ) AS
  BEGIN
    INSERT INTO TJPD.OFFICER
    VALUES (TJPD.OFFICER_SEQ.NEXTVAL, OFFICER_NAME, OFFICER_RANK, 'root', OFFICER_LVL);
    COMMIT; 
  END ADD_USER; 
  
  PROCEDURE DELETE_USER(
    OFFICER_NAME IN VARCHAR2
  ) AS
  BEGIN
    DELETE FROM TJPD.OFFICER	
        WHERE TJPD.OFFICER.OFFICER_NAME = OFFICER_NAME AND ROWNUM = 1;
    COMMIT;
  END DELETE_USER;
  
  PROCEDURE EDIT_PWD(
    OFFICER_PWD IN VARCHAR2,
    OFFICER_NAME IN VARCHAR2
  ) AS
  BEGIN
    UPDATE TJPD.OFFICER
        SET TJPD.OFFICER.OFFICER_PASSWORD = OFFICER_PWD
        WHERE TJPD.OFFICER.OFFICER_NAME = OFFICER_NAME AND ROWNUM = 1;
    COMMIT;
  END EDIT_PWD;

END LVL1; 

CREATE OR REPLACE FUNCTION CHECK_LOGIN(OFFICER_NAME TJPD.OFFICER.OFFICER_NAME%TYPE, OFFICER_PWD TJPD.OFFICER.OFFICER_PASSWORD%TYPE) RETURN TJPD.OFFICER.USER_LEVEL%TYPE IS 
    LVL    TJPD.OFFICER.USER_LEVEL%TYPE;
BEGIN
    SELECT TJPD.OFFICER.USER_LEVEL INTO LVL FROM TJPD.OFFICER 
        WHERE TJPD.OFFICER.OFFICER_NAME = OFFICER_NAME AND TJPD.OFFICER.OFFICER_PASSWORD = OFFICER_PWD AND ROWNUM = 1;
        RETURN LVL;
END;

SHOW ERRORS